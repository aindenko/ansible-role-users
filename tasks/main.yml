---
# tasks file for users
- name: manage groups
  group:
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
    gid: "{{ item.gid | default(omit) }}"
  with_items:
    - "{{ users_group_list }}"
  when:
    - users_group_list is defined
  loop_control:
    label: "{{ item.name }}"

- name: manage users
  user:
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
    comment: "{{ item.comment | default(omit) }}"
    password: "{{ item.password | default(omit) }}"
    uid: "{{ item.uid | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    groups: "{{ item.groups | default(omit) }}"
  with_items:
    - "{{ users_user_list }}"
  when:
    - users_user_list is defined
  loop_control:
    label: "{{ item.name }}"

- name: manage cron permission
  template:
    src: cron.allow.j2
    dest: /etc/cron.allow
  when:
    - users_user_list is defined
  loop_control:
    label: "{{ item.name }}"

- name: set sudo options
  template:
    src: sudo.j2
    dest: /etc/sudoers.d/{{ item.name }}
  with_items:
    - "{{ users_user_list }}"
  when:
    - users_user_list is defined
    - item.sudo_options is defined
  loop_control:
    label: "{{ item.name }}"

- name: create ssh_key_directory
  file:
    path: "{{ users_ssh_key_directory }}"
    state: directory
  delegate_to: localhost
  become: no
  run_once: yes
  with_items:
    - "{{ users_user_list }}"
  when:
    - users_user_list is defined
    - item.manage_ssh_key is defined
    - item.manage_ssh_key

- name: generate ssh key
  command: ssh-keygen -f "{{ users_ssh_key_directory }}/{{ item.name }}" -C "Generated by Ansible role robertdebock.users"
  args:
    creates: "{{ users_ssh_key_directory }}/{{ item.name }}"
  with_items:
    - "{{ users_user_list }}"
  when:
    - users_user_list is defined
    - item.manage_ssh_key is defined
    - item.manage_ssh_key
  loop_control:
    label: "{{ item.name }}"
  delegate_to: localhost
  become: no
  run_once: yes

- name: read generated ssh key
  command: cat "{{ users_ssh_key_directory }}/{{ item.name }}.pub"
  with_items:
    - "{{ users_user_list }}"
  when:
    - users_user_list is defined
    - item.manage_ssh_key is defined
    - item.manage_ssh_key
  changed_when: no
  register: ssh_public_key
  delegate_to: localhost
  become: no
  loop_control:
    label: "{{ item.name }}"
  run_once: yes

- name: convert ssh key to ppk
  shell: ssh-keygen -e -f "{{ users_ssh_key_directory }}/{{ item.name }}" -C "Generated by Ansible role robertdebock.users" > "{{ users_ssh_key_directory }}/{{ item.name }}.ppk"
  args:
    creates: "{{ users_ssh_key_directory }}/{{ item.name }}.ppk"
  with_items:
    - "{{ users_user_list }}"
  when:
    - users_user_list is defined
    - item.manage_ssh_key is defined
    - item.manage_ssh_key
  delegate_to: localhost
  become: no
  loop_control:
    label: "{{ item.name }}"
  run_once: yes

- name: place authorized_key
  authorized_key:
    user: "{{ item.name }}"
    state: present
    key: "{{ item.authorized_key }}"
  with_items:
    - "{{ users_user_list }}"
  when:
    - users_user_list is defined
    - item.authorized_key is defined
  loop_control:
    label: "{{ item.name }}"

- name: place ssh_public_key
  authorized_key:
    user: "{{ item.item.name }}"
    state: present
    key: "{{ item.stdout }}"
  with_items:
    - "{{ ssh_public_key.results }}"
  when:
    - ssh_public_key.results is defined
    - item.item.manage_ssh_key is defined
    - item.item.manage_ssh_key
  loop_control:
    label: "{{ item.item.name }}"
